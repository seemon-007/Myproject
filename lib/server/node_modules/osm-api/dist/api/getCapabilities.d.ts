export type ApiStatus = "online" | "offline";
export type ApiCapabilities = {
    version: string;
    generator: string;
    copyright: string;
    attribution: string;
    license: string;
    api: {
        version: {
            minimum: string;
            maximum: string;
        };
        area: {
            maximum: number;
        };
        note_area: {
            maximum: number;
        };
        tracepoints: {
            per_page: number;
        };
        waynodes: {
            maximum: number;
        };
        relationmembers: {
            maximum: number;
        };
        changesets: {
            maximum_elements: number;
            default_query_limit: number;
            maximum_query_limit: number;
        };
        notes: {
            default_query_limit: number;
            maximum_query_limit: number;
        };
        timeout: {
            seconds: number;
        };
        status: {
            database: ApiStatus;
            api: ApiStatus;
            gpx: ApiStatus;
        };
    };
    policy: {
        imagery: {
            blacklist: {
                regex: string;
            }[];
        };
    };
};
/** This API provides information about the capabilities and limitations of the current API. */
export declare function getApiCapabilities(): Promise<ApiCapabilities>;
/** @deprecated Use {@link getApiCapabilities} instead */
export type OsmCapabilities = {
    limits: {
        maxArea: number;
        maxNoteArea: number;
        maxTracepointPerPage: number;
        maxWayNodes: number;
        maxChangesetElements: number;
        maxTimeout: number;
    };
    policy: {
        imageryBlacklist: string[];
    };
};
/**
 * @deprecated Use {@link getApiCapabilities} instead. This method was
 * created before the API supported JSON, and it does not contain every
 * field.
 */
export declare function getCapabilities(): Promise<OsmCapabilities>;
